file(GLOB headers *.h)
file(GLOB sources *.cpp)

include_directories(${PROJECT_SOURCE_DIR}/include) 

if(CMAKE_COMPILER_IS_GNUCXX)
	set(CMAKE_CXX_FLAGS -std=c++0x)
	add_definitions(-D_GLIBCXX_USE_NANOSLEEP) # Required to enable this_thread:: sleep_for and ::sleep_until on certain distros.
endif()

add_executable(functional ${headers} ${sources})

if(CMAKE_COMPILER_IS_GNUCXX)
	target_link_libraries(functional pthread)
endif()

set_property(TARGET functional PROPERTY FOLDER "tests")

add_test(empty_not_started functional empty nostart)
add_test(empty_started functional empty start)
add_test(dummies_unconnected_not_started functional unconnected nostart)
add_test(dummies_unconnected_started functional unconnected start)
add_test(dummies_connected_notstarted functional connected nostart)
add_test(dummies_connected_started functional connected start)
add_test(count_1 functional count 1)
add_test(count_2 functional count 2)
add_test(count_3 functional count 3)
add_test(count_10 functional count 10)
add_test(restart_from_pause_1 functional restart pause 1)
add_test(restart_from_pause_3 functional restart pause 3)
add_test(restart_from_stop_1 functional restart stop 1)
add_test(restart_from_stop_3 functional restart stop 3)
add_test(tee_1 functional tee 1)
add_test(tee_2 functional tee 2)
add_test(tee_3 functional tee 3)
add_test(tee_10 functional tee 10)
add_test(reconnect_while_stopped_1 functional reconnect stop 1)
add_test(reconnect_while_stopped_2 functional reconnect stop 2)
add_test(reconnect_while_stopped_3 functional reconnect stop 3)
add_test(reconnect_while_stopped_10 functional reconnect stop 10)
add_test(reconnect_while_paused_1 functional reconnect pause 1)
add_test(reconnect_while_paused_2 functional reconnect pause 2)
add_test(reconnect_while_paused_3 functional reconnect pause 3)
add_test(reconnect_while_paused_10 functional reconnect pause 10)
add_test(reconnect_while_running_1 functional reconnect nohalt 1)
add_test(reconnect_while_running_2 functional reconnect nohalt 2)
add_test(reconnect_while_running_3 functional reconnect nohalt 3)
add_test(reconnect_while_running_10 functional reconnect nohalt 10)
add_test(add_delay functional add_delay)
add_test(add_int_1 functional add int 1)
add_test(add_int_2 functional add int 2)
add_test(add_int_3 functional add int 3)
add_test(add_int_10 functional add int 10)
add_test(add_string_1 functional add string 1)
add_test(add_string_2 functional add string 2)
add_test(add_string_3 functional add string 3)
add_test(add_string_10 functional add string 10)
add_test(const_add_int_1 functional const_add int 1)
add_test(const_add_int_2 functional const_add int 2)
add_test(const_add_int_3 functional const_add int 3)
add_test(const_add_int_10 functional const_add int 10)
add_test(const_add_string_1 functional const_add string 1)
add_test(const_add_string_2 functional const_add string 2)
add_test(const_add_string_3 functional const_add string 3)
add_test(const_add_string_10 functional const_add string 10)
add_test(max_length_1 functional max_length 1)
add_test(max_length_3 functional max_length 3)
add_test(max_length_10 functional max_length 10)
add_test(max_weight_1 functional max_weight 1)
add_test(max_weight_100 functional max_weight 100)
